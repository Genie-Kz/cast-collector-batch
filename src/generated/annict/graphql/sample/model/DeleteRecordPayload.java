package annict.graphql.sample.model;

import com.kobylynskyi.graphql.codegen.model.graphql.GraphQLRequestSerializer;
import java.util.StringJoiner;

/**
 * Autogenerated return type of DeleteRecord.
 */
@javax.annotation.processing.Generated(
    value = "com.kobylynskyi.graphql.codegen.GraphQLCodegen",
    date = "2025-06-22T01:49:37+0900"
)
public class DeleteRecordPayload implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private String clientMutationId;
    private Episode episode;

    public DeleteRecordPayload() {
    }

    public DeleteRecordPayload(String clientMutationId, Episode episode) {
        this.clientMutationId = clientMutationId;
        this.episode = episode;
    }

    /**
     * A unique identifier for the client performing the mutation.
     */
    public String getClientMutationId() {
        return clientMutationId;
    }
    /**
     * A unique identifier for the client performing the mutation.
     */
    public void setClientMutationId(String clientMutationId) {
        this.clientMutationId = clientMutationId;
    }

    public Episode getEpisode() {
        return episode;
    }
    public void setEpisode(Episode episode) {
        this.episode = episode;
    }


    @Override
    public String toString() {
        StringJoiner joiner = new StringJoiner(", ", "{ ", " }");
        if (clientMutationId != null) {
            joiner.add("clientMutationId: " + GraphQLRequestSerializer.getEntry(clientMutationId));
        }
        if (episode != null) {
            joiner.add("episode: " + GraphQLRequestSerializer.getEntry(episode));
        }
        return joiner.toString();
    }

    public static DeleteRecordPayload.Builder builder() {
        return new DeleteRecordPayload.Builder();
    }

    @javax.annotation.processing.Generated(
        value = "com.kobylynskyi.graphql.codegen.GraphQLCodegen",
        date = "2025-06-22T01:49:37+0900"
    )
    public static class Builder {

        private String clientMutationId;
        private Episode episode;

        public Builder() {
        }

        /**
         * A unique identifier for the client performing the mutation.
         */
        public Builder setClientMutationId(String clientMutationId) {
            this.clientMutationId = clientMutationId;
            return this;
        }

        public Builder setEpisode(Episode episode) {
            this.episode = episode;
            return this;
        }


        public DeleteRecordPayload build() {
            return new DeleteRecordPayload(clientMutationId, episode);
        }

    }
}
